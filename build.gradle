plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	enabled = false
}

//프로젝트 단위 변수 설정
ext {
	profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
}
//리소스 폴더 지정
sourceSets{
	main{
		resources{
			srcDirs "src/main/resources", "src/main/resources-s%{profile}"
		}
	}
}

tasks{
	processResources{
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//spring mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	// lombok
	implementation('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	// swagger
	implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2')

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	testImplementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	testImplementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
//	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
